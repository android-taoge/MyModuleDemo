if(isNeedMineModule.toBoolean()){
    apply plugin: "com.android.library"
}else {
    apply plugin: "com.android.application"
}
android {
    compileSdkVersion rootProject.ext.versions["compileSdkVersion"]



    defaultConfig {
        minSdkVersion rootProject.ext.versions["minSdkVersion"]
        targetSdkVersion rootProject.ext.versions["targetSdkVersion"]
        versionCode rootProject.ext.versions["versionCode"]
        versionName rootProject.ext.versions["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            if(!isNeedMineModule.toBoolean()){
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
            }else{
                manifest.srcFile "src/main/AndroidManifest.xml"
                java{
                    exclude "src/debug"
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':commonlib')
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
}
